AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  Stage:
    Type: String
  Version:
    Type: String
  PixTransactionKeysJobsCIDFilesName:
    Type: String
  EmailInfractionTemplate:
    Type: String

Resources:
  # ::::  S3 :::: #
  PixTransactionKeysJobsCIDFiles:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${Stage}-${PixTransactionKeysJobsCIDFilesName}'
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - PUT
              - HEAD
              - GET
              - POST
            AllowedOrigins:
              - '*'
            MaxAge: '3000'

  # :::: LAMBDA :::: #
  PixTransactionKeysJobListsKeys:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixTransactionKeysJob-Lists-Keys'
      Handler: app/request/job-claims-request.get
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 60
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      ReservedConcurrentExecutions: 6
      Environment:
        Variables:
          CLAIM_OPEN_QUEUE: !ImportValue ClaimOpenQueueURL
          CLAIM_CONFIRMED_QUEUE: !ImportValue ClaimConfirmedQueueURL
          CLAIM_CANCELED_QUEUE: !ImportValue ClaimCanceledQueueURL
          CLAIM_WAITING_QUEUE: !ImportValue ClaimWaitingQueueURL
          CLAIM_COMPLETED_QUEUE: !ImportValue ClaimCompletedQueueURL
      Events:
        CLAIMSOPEN:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
            Name: job-list-with-status-open
            Description: List claims with status OPEN
            Input: >-
              {"triggerDescription": "Start the list of claim with status OPEN",
              "claimStatusId": 1}
        CLAIMSCANCELED:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
            Name: job-list-with-status-canceled
            Description: List claims with status CANCELED
            Input: >-
              {"triggerDescription": "Start the list of claim with status CANCELED",
              "claimStatusId": 2}
        CLAIMSWAITING:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
            Name: job-list-with-status-waiting
            Description: List claims with status WAITING
            Input: >-
              {"triggerDescription": "Start the list of claim with status WAITING",
              "claimStatusId": 3}
        CLAIMSCONFIRMED:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
            Name: job-list-with-status-confirmed
            Description: List claims with status CONFIRMED
            Input: >-
              {"triggerDescription": "Start the list of claim with status CONFIRMED",
              "claimStatusId": 4}
        CLAIMSCOMPLETED:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
            Name: job-list-with-status-completed
            Description: List claims with status COMPLETED
            Input: >-
              {"triggerDescription": "Start the list of claim with status COMPLETED",
              "claimStatusId": 5}
  PixTransactionKeysProcessClaimOpen:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixTransactionKeys-Process-ClaimOpen'
      Handler: app/request/job-claims-request.processClaimOpen
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 30
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !ImportValue ClaimOpenQueueARN
            BatchSize: 1

  PixTransactionKeysClaimCancel:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixTransactionKeys-Process-ClaimCancel'
      Handler: app/request/job-claims-request.processClaimCancel
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 30
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !ImportValue ClaimCanceledQueueArn
            BatchSize: 1

  PixTransactionKeysJobClaimConfirm:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixTransactionKeys-Process-ClaimConfirm'
      Handler: app/request/job-claims-request.processClaimConfirm
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 30
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      Environment:
        Variables:
          TIME_IN_MINUTES_TO_AUTOMATIC_CANCEL_PORTABILITY: 30
      Events:
        SQSEvent:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
            Name: job-claim-confirm
            Description: Confirm claims by status, when cateno is donor and resolution period end more than 7 days and 30 minutes.

  PixCancelPortabilityDonor:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixTransactionKeysJob-Cancel-Portability-Donor'
      Handler: app/request/job-claims-request.cancelPortabilityWhenCatenoIsDonor
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 60
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          PERIOD_IN_MINUTES_TO_AUTOMATIC_CANCEL_PORTABILITY: 30
      Events:
        SchPortability:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
            Name: job-cancel-portability-cateno-isdonor
            Description: Cancel expired claims portability (cateno is donor, staus WATING_RESOLUTION and ResolutionPeriodEnd >= now)

  PixCancelOwnershipClaimer:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixTransactionKeysJob-Cancel-Ownership-Claimer'
      Handler: app/request/job-claims-request.cancelOwnershipWhenCatenoIsClaimer
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 60
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          PERIOD_IN_DAYS_TO_AUTOMATIC_CANCEL_CLAIMER: 30
      Events:
        SchOwnership:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)
            Name: job-cancel-ownership-cateno-isclaimer
            Description: Cancel expired claims ownership (cateno is claimer, staus CONFIRMED and createdAt >= 30 days)

  PixTransactionKeysSynchronization:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixTransactionKeysJob-Key-Synchronization'
      Handler: app/request/cid-request.verifyKeySynchronization
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 60
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          CID_FILE_NAMES: !Sub '${Stage}-${PixTransactionKeysJobsCIDFilesName}'

  PixConcludeConfirmedClaimer:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixTransactionKeys-Process-ClaimConfirmed'
      Handler: app/request/job-claims-request.processClaimsInConfirmed
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 30
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !ImportValue ClaimConfirmedQueueARN
            BatchSize: 1
  PixTransactionKeysProcessClaimCompleted:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixTransactionKeys-Process-ClaimCompleted'
      Handler: app/request/job-claims-request.processClaimCompleted
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 30
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !ImportValue ClaimCompletedQueueArn
            BatchSize: 1
  PixInfractionReportImport:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixInfractionReport-import'
      Handler: app/request/job-infraction-report-request.import
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 60
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      Environment:
        Variables:
          INFRACTION_OPEN_QUEUE: !ImportValue InfractionOpenQueueURL
          INFRACTION_CANCELLED_QUEUE: !ImportValue InfractionCanceledQueueURL
          INFRACTION_CLOSED_QUEUE: !ImportValue InfractionClosedQueueURL
          INFRACTION_ACKNOWKLEDGED_QUEUE: !ImportValue InfractionAcknowledgedQueueURL
      Events:
        IMPORT:
          Type: Schedule
          Properties:
            Schedule: rate(1 hour)
            Name: job-infraction-import
            Description: Import infraction reports from DICT
  PixInfractionReportAcknowledge:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixInfractionReport-Acknowledge'
      Handler: app/request/job-infraction-report-request.acknowledge
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 30
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !ImportValue InfractionOpenQueueArn
            BatchSize: 1

  PixInfractionReportUpdateCancelled:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixInfractionReport-UpdateCancelled'
      Handler: app/request/job-infraction-report-request.updateCancelled
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 30
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !ImportValue InfractionCanceledQueueArn
            BatchSize: 1

  PixInfractionReportUpdateClosed:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixInfractionReport-UpdateClosed'
      Handler: app/request/job-infraction-report-request.updateClosed
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 30
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !ImportValue InfractionCloseQueueArn
            BatchSize: 1

  PixInfractionReportUpdateAcknowledged:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixInfractionReport-UpdateAcknowledged'
      Handler: app/request/job-infraction-report-request.updateAcknowledged
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 30
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !ImportValue InfractionAcknowledgedQueueArn
            BatchSize: 1

  PixTransactionKeysJobGetCidEvents:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixTransactionKeysJob-Get-Cid-Events'
      Handler: app/request/cid-request.getCidEvents
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 120
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      Environment:
        Variables:
          CID_EVENTS_QUEUE: !ImportValue CidEventsQueueURL
      Events:
        CPF:
          Type: Schedule
          Properties:
            Schedule: rate(1 hour)
            Name: job-list-CPF-events
            Description: List CPF Events
            Input: >-
              {"triggerDescription": "Start the listing of CPF events",
              "keyType": "CPF"}
        CNPJ:
          Type: Schedule
          Properties:
            Schedule: rate(1 hour)
            Name: job-list-CNPJ-events
            Description: List CNPJ Events
            Input: >-
              {"triggerDescription": "Start the listing of CNPJ events",
              "keyType": "CNPJ"}
        PHONE:
          Type: Schedule
          Properties:
            Schedule: rate(1 hour)
            Name: job-list-PHONE-events
            Description: List PHONE Events
            Input: >-
              {"triggerDescription": "Start the listing of PHONE events",
              "keyType": "PHONE"}
        EMAIL:
          Type: Schedule
          Properties:
            Schedule: rate(1 hour)
            Name: job-list-EMAIL-events
            Description: List EMAIL Events
            Input: >-
              {"triggerDescription": "Start the listing of EMAIL events",
              "keyType": "EMAIL"}
        EVP:
          Type: Schedule
          Properties:
            Schedule: rate(1 hour)
            Name: job-list-EVP-events
            Description: List EVP Events
            Input: >-
              {"triggerDescription": "Start the listing of EVP events",
              "keyType": "EVP"}

  PixTransactionKeysJobProcessCidEvent:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixTransactionKeysJob-Process-Cid-Event'
      Handler: app/request/cid-request.processCidEvent
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 60
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !ImportValue CidEventsQueueArn
            BatchSize: 1

  PixTransactionKeysCheckSyncStatus:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixTransactionKeysJob-Check-Synch-Status'
      Handler: app/request/cid-request.checkSynchronizationStatus
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 30
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          CID_FILE_NAMES: !Sub '${Stage}-${PixTransactionKeysJobsCIDFilesName}'
      Events:
        ScheduleEvent:
          Type: Schedule
          Properties:
            Schedule: cron(0/5 4-11 * * ? *) # Every 5 minutes from 1am to 8am, Sao Paulo (4am to 11am UTC)
            Name: job-check-synchronization-status
            Description: Manages the synchronion of transaction keys against DICT's key repository

  SendMailNotificationInfranction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-SendMailNotificationInfraction'
      Handler: app/request/job-infraction-report-request.sendEmailInfraction
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 60
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          INFRACTION_SEND_INFRACTION_MAIL: !Sub '${Stage}-CatenoNotification-Infraction-Mail'
          INFRACTION_MAIL_TEMPLATE: !Sub '${EmailInfractionTemplate}'
      Events:
        ScheduleEvent:
          Type: Schedule
          Properties:
            Schedule: 'rate(1 hour)' # Every hour
            Name: job-verify-infraction-mail
            Description: Send E-mail for infractions check an hour in hour

  PixTransactionKeysJobsProcessScheduledRequests:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixTransactionKeysJobs-Process-ScheduledRequests'
      Handler: app/request/job-scheduled-requests.processScheduledRequests
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 30
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      ReservedConcurrentExecutions: 1

  PixPaticipantUpdateCamt04:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${Version}-PixParticipant-Update-Camt04'
      Handler: app/request/job-participant-request.updateParticipantRequest
      Runtime: nodejs12.x
      CodeUri: ./../
      MemorySize: 128
      Timeout: 30
      Role: !ImportValue PixTransactionKeysJobsLambdaRoleARN
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !ImportValue Camt14QueueArn
            BatchSize: 1

Outputs:
  PixTransactionKeysJobsCIDFilesName:
    Description: Pix Transaction Keys Jobs Cid Files
    Value: !Ref PixTransactionKeysJobsCIDFiles
    Export:
      Name: 'PixTransactionKeysJobsCIDFilesName'
